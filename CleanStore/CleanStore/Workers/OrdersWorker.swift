//
//  OrdersWorker.swift
//  CleanStore
//
//  Created by Bradley.yoon on 2023/06/08.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class OrdersWorker
{
    var ordersStore: OrdersStoreProtocol
    
    init(ordersStore: OrdersStoreProtocol) {
        self.ordersStore = ordersStore
    }
    
    func fetchOrders(completionHandler: @escaping ([Order]) -> Void) {
        
        ordersStore.fetchOrders {(orders: () throws -> [Order]) -> Void in
            do {
                let orders = try orders()
                DispatchQueue.main.async {
                    completionHandler(orders)
                }
            }
            catch {
                DispatchQueue.main.async {
                    completionHandler([])
                }
            }
        }
        
    }
}


protocol OrdersStoreProtocol {
    
    func fetchOrders(completionHandler: @escaping (() throws -> [Order]) -> Void)
    
    
}
